`chmod` 是 Linux 系统中用于更改文件或目录权限的命令。权限决定了用户对文件或目录的读、写、执行能力。

---

### 基本语法

```bash
chmod [选项] 模式 文件或目录
```

- **模式**：表示权限的修改方式，可以用数字（八进制）或符号表示。
- **文件或目录**：指定要更改权限的目标。

---

### 文件权限概念

Linux 文件权限分为三部分，每部分由三种权限组成：
1. **用户（Owner）**：文件的拥有者。
2. **用户组（Group）**：与文件同组的用户。
3. **其他人（Others）**：除用户和用户组外的所有用户。

权限：
- `r`：读权限（值为 4）
- `w`：写权限（值为 2）
- `x`：执行权限（值为 1）

权限表示：
- **符号形式**：`rwx`、`rw-` 等。
- **数字形式**：通过八进制数字表示，如 `7` 表示 `rwx`。

权限分配顺序：
```
Owner  Group  Others
```

---

### 使用方式

#### 1. **八进制表示法**

权限值通过将 `r`、`w`、`x` 的值相加得出：
- `rwx` = `4 + 2 + 1 = 7`
- `rw-` = `4 + 2 = 6`
- `r--` = `4`

示例：
```bash
chmod 755 file.txt
```
解释：
- `7`：用户拥有 `rwx` 权限。
- `5`：用户组拥有 `r-x` 权限。
- `5`：其他人拥有 `r-x` 权限。

---

#### 2. **符号表示法**

符号表示法使用 `+`、`-` 和 `=` 来设置权限：
- `+`：添加权限。
- `-`：移除权限。
- `=`：设置为指定权限。

权限范围：
- `u`：用户（User）。
- `g`：用户组（Group）。
- `o`：其他人（Others）。
- `a`：所有人（All，等同于 `ugo`）。

示例：
1. 添加权限：
   ```bash
   chmod u+x file.txt
   ```
   给用户添加执行权限。

2. 移除权限：
   ```bash
   chmod g-w file.txt
   ```
   移除用户组的写权限。

3. 设置特定权限：
   ```bash
   chmod o=r file.txt
   ```
   设置其他人仅有读权限。

---

#### 3. **递归修改**

如果需要修改目录及其下所有子目录和文件的权限，使用 `-R` 选项：
```bash
chmod -R 755 /path/to/directory
```
递归修改 `/path/to/directory` 下的所有文件和子目录权限。

