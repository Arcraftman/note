`ps` 是 Linux 系统中用来查看当前运行进程状态的命令，常用来监控系统运行情况。以下是 `ps` 命令的详细介绍，包括其语法、选项和常见用法。

---

## **语法**  

ps [选项]


---

## **常用选项**  

1. **基本选项**  
   - `-A` 或 `-e`：显示所有进程。
   - `-a`：显示除会话领导进程和没有终端的进程以外的所有进程。
   - `-x`：显示没有控制终端的进程。
   - `-u [用户]`：显示指定用户的进程。
   - `-f`：显示完整格式信息。
   - `-l`：显示更详细的长格式信息。
   - `-o`：自定义输出字段（比如 `ps -o pid,comm`）。

2. **输出控制选项**  
   - `--sort`：按指定字段排序（如 `--sort=-%mem` 按内存使用率降序排序）。
   - `--no-headers`：不显示标题行。

3. **显示特定进程**  
   - `-p [PID]`：显示指定 PID 的进程。
   - `--ppid [PPID]`：显示指定父进程 ID 的所有子进程。

4. **辅助选项**  
   - `--forest`：以树状结构显示进程之间的关系。
   - `-C [COMMAND]`：按命令名称显示进程。
   - `-N`：显示与指定条件相反的进程。

---

## **常用输出字段**  

使用 `ps` 时，以下是常见的输出字段（可通过 `ps -o` 自定义选择显示）：

| 字段       | 含义                          |
|------------|-------------------------------|
| PID        | 进程 ID                       |
| PPID       | 父进程 ID                     |
| CMD 或 COMMAND | 启动进程的命令及参数         |
| USER       | 启动进程的用户                |
| %CPU       | CPU 使用率                    |
| %MEM       | 内存使用率                    |
| VSZ        | 虚拟内存大小（以 KB 为单位）   |
| RSS        | 实际内存大小（以 KB 为单位）   |
| STAT       | 进程状态                      |
| TTY        | 关联的终端                    |
| START      | 进程启动时间                  |
| TIME       | 进程运行的累计 CPU 时间       |

---

## **进程状态（STAT 字段）**  
`ps` 命令的 STAT 字段表示进程状态，以下是常见状态的含义：

| 状态 | 描述                                |
|------|-------------------------------------|
| R    | 正在运行                           |
| S    | 休眠（可中断）                     |
| D    | 不可中断的休眠（通常是 I/O 等待）  |
| Z    | 僵尸进程                           |
| T    | 停止（由信号或控制终端）           |
| I    | 空闲进程（Linux 内核线程）         |

---

## **常见用法**  

1. 查看所有进程：  
   
   ps -ef
   

2. 查看当前用户的所有进程：  
   
   ps -u $(whoami)
   

3. 查看特定进程（如 PID 为 1234）：  
   
   ps -p 1234
   

4. 显示树状结构：  
   
   ps axjf
   

5. 按 CPU 使用率排序：  
   
   ps -eo pid,comm,%cpu --sort=-%cpu
   

6. 按内存使用率排序：  
   
   ps -eo pid,comm,%mem --sort=-%mem
   

7. 显示特定字段：  
   
   ps -eo pid,user,%cpu,%mem,comm
   

8. 查看某命令的所有实例（如 `nginx`）：  
   
   ps -C nginx
   

9. 查看父进程为 1234 的所有子进程：  
   
   ps --ppid 1234
   

---

## **结合其他命令使用**  

1. **实时监控进程（结合 `watch` 命令）：**  
   
   watch -n 1 'ps -eo pid,comm,%cpu,%mem --sort=-%cpu'
   

2. **过滤特定信息（结合 `grep`）：**  
   
   ps -ef | grep nginx
   

3. **统计进程数量：**  
   
   ps -ef | wc -l
   

